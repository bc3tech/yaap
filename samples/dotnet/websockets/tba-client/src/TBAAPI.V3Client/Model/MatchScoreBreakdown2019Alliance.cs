/* 
 * The Blue Alliance API v3
 *
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).    A `User-Agent` header may need to be set to prevent a 403 Unauthorized error.
 *
 * The version of the OpenAPI document: 3.8.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

namespace TBAAPI.V3Client.Model;

using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text;
using System.Text.Json;
using System.Text.Json.Serialization;
/// <summary>
/// MatchScoreBreakdown2019Alliance
/// </summary>
/// <remarks>
/// Initializes a new instance of the <see cref="MatchScoreBreakdown2019Alliance" /> class.
/// </remarks>
[DataContract]
public partial record MatchScoreBreakdown2019Alliance : IValidatableObject
{

    /// <summary>
    /// Gets or Sets AdjustPoints
    /// </summary>
    [DataMember(Name = "adjustPoints", EmitDefaultValue = false), JsonPropertyName("adjustPoints")]
    public int AdjustPoints { get; set; }

    /// <summary>
    /// Gets or Sets AutoPoints
    /// </summary>
    [DataMember(Name = "autoPoints", EmitDefaultValue = false), JsonPropertyName("autoPoints")]
    public int AutoPoints { get; set; }

    /// <summary>
    /// Gets or Sets Bay1
    /// </summary>
    [DataMember(Name = "bay1", EmitDefaultValue = false), JsonPropertyName("bay1")]
    public string? Bay1 { get; set; }

    /// <summary>
    /// Gets or Sets Bay2
    /// </summary>
    [DataMember(Name = "bay2", EmitDefaultValue = false), JsonPropertyName("bay2")]
    public string? Bay2 { get; set; }

    /// <summary>
    /// Gets or Sets Bay3
    /// </summary>
    [DataMember(Name = "bay3", EmitDefaultValue = false), JsonPropertyName("bay3")]
    public string? Bay3 { get; set; }

    /// <summary>
    /// Gets or Sets Bay4
    /// </summary>
    [DataMember(Name = "bay4", EmitDefaultValue = false), JsonPropertyName("bay4")]
    public string? Bay4 { get; set; }

    /// <summary>
    /// Gets or Sets Bay5
    /// </summary>
    [DataMember(Name = "bay5", EmitDefaultValue = false), JsonPropertyName("bay5")]
    public string? Bay5 { get; set; }

    /// <summary>
    /// Gets or Sets Bay6
    /// </summary>
    [DataMember(Name = "bay6", EmitDefaultValue = false), JsonPropertyName("bay6")]
    public string? Bay6 { get; set; }

    /// <summary>
    /// Gets or Sets Bay7
    /// </summary>
    [DataMember(Name = "bay7", EmitDefaultValue = false), JsonPropertyName("bay7")]
    public string? Bay7 { get; set; }

    /// <summary>
    /// Gets or Sets Bay8
    /// </summary>
    [DataMember(Name = "bay8", EmitDefaultValue = false), JsonPropertyName("bay8")]
    public string? Bay8 { get; set; }

    /// <summary>
    /// Gets or Sets CargoPoints
    /// </summary>
    [DataMember(Name = "cargoPoints", EmitDefaultValue = false), JsonPropertyName("cargoPoints")]
    public int CargoPoints { get; set; }

    /// <summary>
    /// Gets or Sets CompleteRocketRankingPoint
    /// </summary>
    [DataMember(Name = "completeRocketRankingPoint", EmitDefaultValue = false), JsonPropertyName("completeRocketRankingPoint")]
    public bool CompleteRocketRankingPoint { get; set; }

    /// <summary>
    /// Gets or Sets CompletedRocketFar
    /// </summary>
    [DataMember(Name = "completedRocketFar", EmitDefaultValue = false), JsonPropertyName("completedRocketFar")]
    public bool CompletedRocketFar { get; set; }

    /// <summary>
    /// Gets or Sets CompletedRocketNear
    /// </summary>
    [DataMember(Name = "completedRocketNear", EmitDefaultValue = false), JsonPropertyName("completedRocketNear")]
    public bool CompletedRocketNear { get; set; }

    /// <summary>
    /// Gets or Sets EndgameRobot1
    /// </summary>
    [DataMember(Name = "endgameRobot1", EmitDefaultValue = false), JsonPropertyName("endgameRobot1")]
    public string? EndgameRobot1 { get; set; }

    /// <summary>
    /// Gets or Sets EndgameRobot2
    /// </summary>
    [DataMember(Name = "endgameRobot2", EmitDefaultValue = false), JsonPropertyName("endgameRobot2")]
    public string? EndgameRobot2 { get; set; }

    /// <summary>
    /// Gets or Sets EndgameRobot3
    /// </summary>
    [DataMember(Name = "endgameRobot3", EmitDefaultValue = false), JsonPropertyName("endgameRobot3")]
    public string? EndgameRobot3 { get; set; }

    /// <summary>
    /// Gets or Sets FoulCount
    /// </summary>
    [DataMember(Name = "foulCount", EmitDefaultValue = false), JsonPropertyName("foulCount")]
    public int FoulCount { get; set; }

    /// <summary>
    /// Gets or Sets FoulPoints
    /// </summary>
    [DataMember(Name = "foulPoints", EmitDefaultValue = false), JsonPropertyName("foulPoints")]
    public int FoulPoints { get; set; }

    /// <summary>
    /// Gets or Sets HabClimbPoints
    /// </summary>
    [DataMember(Name = "habClimbPoints", EmitDefaultValue = false), JsonPropertyName("habClimbPoints")]
    public int HabClimbPoints { get; set; }

    /// <summary>
    /// Gets or Sets HabDockingRankingPoint
    /// </summary>
    [DataMember(Name = "habDockingRankingPoint", EmitDefaultValue = false), JsonPropertyName("habDockingRankingPoint")]
    public bool HabDockingRankingPoint { get; set; }

    /// <summary>
    /// Gets or Sets HabLineRobot1
    /// </summary>
    [DataMember(Name = "habLineRobot1", EmitDefaultValue = false), JsonPropertyName("habLineRobot1")]
    public string? HabLineRobot1 { get; set; }

    /// <summary>
    /// Gets or Sets HabLineRobot2
    /// </summary>
    [DataMember(Name = "habLineRobot2", EmitDefaultValue = false), JsonPropertyName("habLineRobot2")]
    public string? HabLineRobot2 { get; set; }

    /// <summary>
    /// Gets or Sets HabLineRobot3
    /// </summary>
    [DataMember(Name = "habLineRobot3", EmitDefaultValue = false), JsonPropertyName("habLineRobot3")]
    public string? HabLineRobot3 { get; set; }

    /// <summary>
    /// Gets or Sets HatchPanelPoints
    /// </summary>
    [DataMember(Name = "hatchPanelPoints", EmitDefaultValue = false), JsonPropertyName("hatchPanelPoints")]
    public int HatchPanelPoints { get; set; }

    /// <summary>
    /// Gets or Sets LowLeftRocketFar
    /// </summary>
    [DataMember(Name = "lowLeftRocketFar", EmitDefaultValue = false), JsonPropertyName("lowLeftRocketFar")]
    public string? LowLeftRocketFar { get; set; }

    /// <summary>
    /// Gets or Sets LowLeftRocketNear
    /// </summary>
    [DataMember(Name = "lowLeftRocketNear", EmitDefaultValue = false), JsonPropertyName("lowLeftRocketNear")]
    public string? LowLeftRocketNear { get; set; }

    /// <summary>
    /// Gets or Sets LowRightRocketFar
    /// </summary>
    [DataMember(Name = "lowRightRocketFar", EmitDefaultValue = false), JsonPropertyName("lowRightRocketFar")]
    public string? LowRightRocketFar { get; set; }

    /// <summary>
    /// Gets or Sets LowRightRocketNear
    /// </summary>
    [DataMember(Name = "lowRightRocketNear", EmitDefaultValue = false), JsonPropertyName("lowRightRocketNear")]
    public string? LowRightRocketNear { get; set; }

    /// <summary>
    /// Gets or Sets MidLeftRocketFar
    /// </summary>
    [DataMember(Name = "midLeftRocketFar", EmitDefaultValue = false), JsonPropertyName("midLeftRocketFar")]
    public string? MidLeftRocketFar { get; set; }

    /// <summary>
    /// Gets or Sets MidLeftRocketNear
    /// </summary>
    [DataMember(Name = "midLeftRocketNear", EmitDefaultValue = false), JsonPropertyName("midLeftRocketNear")]
    public string? MidLeftRocketNear { get; set; }

    /// <summary>
    /// Gets or Sets MidRightRocketFar
    /// </summary>
    [DataMember(Name = "midRightRocketFar", EmitDefaultValue = false), JsonPropertyName("midRightRocketFar")]
    public string? MidRightRocketFar { get; set; }

    /// <summary>
    /// Gets or Sets MidRightRocketNear
    /// </summary>
    [DataMember(Name = "midRightRocketNear", EmitDefaultValue = false), JsonPropertyName("midRightRocketNear")]
    public string? MidRightRocketNear { get; set; }

    /// <summary>
    /// Gets or Sets PreMatchBay1
    /// </summary>
    [DataMember(Name = "preMatchBay1", EmitDefaultValue = false), JsonPropertyName("preMatchBay1")]
    public string? PreMatchBay1 { get; set; }

    /// <summary>
    /// Gets or Sets PreMatchBay2
    /// </summary>
    [DataMember(Name = "preMatchBay2", EmitDefaultValue = false), JsonPropertyName("preMatchBay2")]
    public string? PreMatchBay2 { get; set; }

    /// <summary>
    /// Gets or Sets PreMatchBay3
    /// </summary>
    [DataMember(Name = "preMatchBay3", EmitDefaultValue = false), JsonPropertyName("preMatchBay3")]
    public string? PreMatchBay3 { get; set; }

    /// <summary>
    /// Gets or Sets PreMatchBay6
    /// </summary>
    [DataMember(Name = "preMatchBay6", EmitDefaultValue = false), JsonPropertyName("preMatchBay6")]
    public string? PreMatchBay6 { get; set; }

    /// <summary>
    /// Gets or Sets PreMatchBay7
    /// </summary>
    [DataMember(Name = "preMatchBay7", EmitDefaultValue = false), JsonPropertyName("preMatchBay7")]
    public string? PreMatchBay7 { get; set; }

    /// <summary>
    /// Gets or Sets PreMatchBay8
    /// </summary>
    [DataMember(Name = "preMatchBay8", EmitDefaultValue = false), JsonPropertyName("preMatchBay8")]
    public string? PreMatchBay8 { get; set; }

    /// <summary>
    /// Gets or Sets PreMatchLevelRobot1
    /// </summary>
    [DataMember(Name = "preMatchLevelRobot1", EmitDefaultValue = false), JsonPropertyName("preMatchLevelRobot1")]
    public string? PreMatchLevelRobot1 { get; set; }

    /// <summary>
    /// Gets or Sets PreMatchLevelRobot2
    /// </summary>
    [DataMember(Name = "preMatchLevelRobot2", EmitDefaultValue = false), JsonPropertyName("preMatchLevelRobot2")]
    public string? PreMatchLevelRobot2 { get; set; }

    /// <summary>
    /// Gets or Sets PreMatchLevelRobot3
    /// </summary>
    [DataMember(Name = "preMatchLevelRobot3", EmitDefaultValue = false), JsonPropertyName("preMatchLevelRobot3")]
    public string? PreMatchLevelRobot3 { get; set; }

    /// <summary>
    /// Gets or Sets Rp
    /// </summary>
    [DataMember(Name = "rp", EmitDefaultValue = false), JsonPropertyName("rp")]
    public int Rp { get; set; }

    /// <summary>
    /// Gets or Sets SandStormBonusPoints
    /// </summary>
    [DataMember(Name = "sandStormBonusPoints", EmitDefaultValue = false), JsonPropertyName("sandStormBonusPoints")]
    public int SandStormBonusPoints { get; set; }

    /// <summary>
    /// Gets or Sets TechFoulCount
    /// </summary>
    [DataMember(Name = "techFoulCount", EmitDefaultValue = false), JsonPropertyName("techFoulCount")]
    public int TechFoulCount { get; set; }

    /// <summary>
    /// Gets or Sets TeleopPoints
    /// </summary>
    [DataMember(Name = "teleopPoints", EmitDefaultValue = false), JsonPropertyName("teleopPoints")]
    public int TeleopPoints { get; set; }

    /// <summary>
    /// Gets or Sets TopLeftRocketFar
    /// </summary>
    [DataMember(Name = "topLeftRocketFar", EmitDefaultValue = false), JsonPropertyName("topLeftRocketFar")]
    public string? TopLeftRocketFar { get; set; }

    /// <summary>
    /// Gets or Sets TopLeftRocketNear
    /// </summary>
    [DataMember(Name = "topLeftRocketNear", EmitDefaultValue = false), JsonPropertyName("topLeftRocketNear")]
    public string? TopLeftRocketNear { get; set; }

    /// <summary>
    /// Gets or Sets TopRightRocketFar
    /// </summary>
    [DataMember(Name = "topRightRocketFar", EmitDefaultValue = false), JsonPropertyName("topRightRocketFar")]
    public string? TopRightRocketFar { get; set; }

    /// <summary>
    /// Gets or Sets TopRightRocketNear
    /// </summary>
    [DataMember(Name = "topRightRocketNear", EmitDefaultValue = false), JsonPropertyName("topRightRocketNear")]
    public string? TopRightRocketNear { get; set; }

    /// <summary>
    /// Gets or Sets TotalPoints
    /// </summary>
    [DataMember(Name = "totalPoints", EmitDefaultValue = false), JsonPropertyName("totalPoints")]
    public int TotalPoints { get; set; }

    /// <summary>
    /// Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
        var sb = new StringBuilder();
        sb.Append("class MatchScoreBreakdown2019Alliance {\n");
        sb.Append("  AdjustPoints: ").Append(this.AdjustPoints).Append('\n');
        sb.Append("  AutoPoints: ").Append(this.AutoPoints).Append('\n');
        sb.Append("  Bay1: ").Append(this.Bay1).Append('\n');
        sb.Append("  Bay2: ").Append(this.Bay2).Append('\n');
        sb.Append("  Bay3: ").Append(this.Bay3).Append('\n');
        sb.Append("  Bay4: ").Append(this.Bay4).Append('\n');
        sb.Append("  Bay5: ").Append(this.Bay5).Append('\n');
        sb.Append("  Bay6: ").Append(this.Bay6).Append('\n');
        sb.Append("  Bay7: ").Append(this.Bay7).Append('\n');
        sb.Append("  Bay8: ").Append(this.Bay8).Append('\n');
        sb.Append("  CargoPoints: ").Append(this.CargoPoints).Append('\n');
        sb.Append("  CompleteRocketRankingPoint: ").Append(this.CompleteRocketRankingPoint).Append('\n');
        sb.Append("  CompletedRocketFar: ").Append(this.CompletedRocketFar).Append('\n');
        sb.Append("  CompletedRocketNear: ").Append(this.CompletedRocketNear).Append('\n');
        sb.Append("  EndgameRobot1: ").Append(this.EndgameRobot1).Append('\n');
        sb.Append("  EndgameRobot2: ").Append(this.EndgameRobot2).Append('\n');
        sb.Append("  EndgameRobot3: ").Append(this.EndgameRobot3).Append('\n');
        sb.Append("  FoulCount: ").Append(this.FoulCount).Append('\n');
        sb.Append("  FoulPoints: ").Append(this.FoulPoints).Append('\n');
        sb.Append("  HabClimbPoints: ").Append(this.HabClimbPoints).Append('\n');
        sb.Append("  HabDockingRankingPoint: ").Append(this.HabDockingRankingPoint).Append('\n');
        sb.Append("  HabLineRobot1: ").Append(this.HabLineRobot1).Append('\n');
        sb.Append("  HabLineRobot2: ").Append(this.HabLineRobot2).Append('\n');
        sb.Append("  HabLineRobot3: ").Append(this.HabLineRobot3).Append('\n');
        sb.Append("  HatchPanelPoints: ").Append(this.HatchPanelPoints).Append('\n');
        sb.Append("  LowLeftRocketFar: ").Append(this.LowLeftRocketFar).Append('\n');
        sb.Append("  LowLeftRocketNear: ").Append(this.LowLeftRocketNear).Append('\n');
        sb.Append("  LowRightRocketFar: ").Append(this.LowRightRocketFar).Append('\n');
        sb.Append("  LowRightRocketNear: ").Append(this.LowRightRocketNear).Append('\n');
        sb.Append("  MidLeftRocketFar: ").Append(this.MidLeftRocketFar).Append('\n');
        sb.Append("  MidLeftRocketNear: ").Append(this.MidLeftRocketNear).Append('\n');
        sb.Append("  MidRightRocketFar: ").Append(this.MidRightRocketFar).Append('\n');
        sb.Append("  MidRightRocketNear: ").Append(this.MidRightRocketNear).Append('\n');
        sb.Append("  PreMatchBay1: ").Append(this.PreMatchBay1).Append('\n');
        sb.Append("  PreMatchBay2: ").Append(this.PreMatchBay2).Append('\n');
        sb.Append("  PreMatchBay3: ").Append(this.PreMatchBay3).Append('\n');
        sb.Append("  PreMatchBay6: ").Append(this.PreMatchBay6).Append('\n');
        sb.Append("  PreMatchBay7: ").Append(this.PreMatchBay7).Append('\n');
        sb.Append("  PreMatchBay8: ").Append(this.PreMatchBay8).Append('\n');
        sb.Append("  PreMatchLevelRobot1: ").Append(this.PreMatchLevelRobot1).Append('\n');
        sb.Append("  PreMatchLevelRobot2: ").Append(this.PreMatchLevelRobot2).Append('\n');
        sb.Append("  PreMatchLevelRobot3: ").Append(this.PreMatchLevelRobot3).Append('\n');
        sb.Append("  Rp: ").Append(this.Rp).Append('\n');
        sb.Append("  SandStormBonusPoints: ").Append(this.SandStormBonusPoints).Append('\n');
        sb.Append("  TechFoulCount: ").Append(this.TechFoulCount).Append('\n');
        sb.Append("  TeleopPoints: ").Append(this.TeleopPoints).Append('\n');
        sb.Append("  TopLeftRocketFar: ").Append(this.TopLeftRocketFar).Append('\n');
        sb.Append("  TopLeftRocketNear: ").Append(this.TopLeftRocketNear).Append('\n');
        sb.Append("  TopRightRocketFar: ").Append(this.TopRightRocketFar).Append('\n');
        sb.Append("  TopRightRocketNear: ").Append(this.TopRightRocketNear).Append('\n');
        sb.Append("  TotalPoints: ").Append(this.TotalPoints).Append('\n');
        sb.Append("}\n");
        return sb.ToString();
    }

    /// <summary>
    /// Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public virtual string ToJson() => JsonSerializer.Serialize(this, GetType());

    /// <summary>
    /// Gets the hash code
    /// </summary>
    /// <returns>Hash code</returns>
    public override int GetHashCode()
    {
        unchecked // Overflow is fine, just wrap
        {
            var hashCode = 41;
            hashCode = (hashCode * 59) + this.AdjustPoints.GetHashCode();
            hashCode = (hashCode * 59) + this.AutoPoints.GetHashCode();
            if (this.Bay1 is not null)
            {
                hashCode = (hashCode * 59) + this.Bay1.GetHashCode();
            }

            if (this.Bay2 is not null)
            {
                hashCode = (hashCode * 59) + this.Bay2.GetHashCode();
            }

            if (this.Bay3 is not null)
            {
                hashCode = (hashCode * 59) + this.Bay3.GetHashCode();
            }

            if (this.Bay4 is not null)
            {
                hashCode = (hashCode * 59) + this.Bay4.GetHashCode();
            }

            if (this.Bay5 is not null)
            {
                hashCode = (hashCode * 59) + this.Bay5.GetHashCode();
            }

            if (this.Bay6 is not null)
            {
                hashCode = (hashCode * 59) + this.Bay6.GetHashCode();
            }

            if (this.Bay7 is not null)
            {
                hashCode = (hashCode * 59) + this.Bay7.GetHashCode();
            }

            if (this.Bay8 is not null)
            {
                hashCode = (hashCode * 59) + this.Bay8.GetHashCode();
            }

            hashCode = (hashCode * 59) + this.CargoPoints.GetHashCode();
            hashCode = (hashCode * 59) + this.CompleteRocketRankingPoint.GetHashCode();
            hashCode = (hashCode * 59) + this.CompletedRocketFar.GetHashCode();
            hashCode = (hashCode * 59) + this.CompletedRocketNear.GetHashCode();
            if (this.EndgameRobot1 is not null)
            {
                hashCode = (hashCode * 59) + this.EndgameRobot1.GetHashCode();
            }

            if (this.EndgameRobot2 is not null)
            {
                hashCode = (hashCode * 59) + this.EndgameRobot2.GetHashCode();
            }

            if (this.EndgameRobot3 is not null)
            {
                hashCode = (hashCode * 59) + this.EndgameRobot3.GetHashCode();
            }

            hashCode = (hashCode * 59) + this.FoulCount.GetHashCode();
            hashCode = (hashCode * 59) + this.FoulPoints.GetHashCode();
            hashCode = (hashCode * 59) + this.HabClimbPoints.GetHashCode();
            hashCode = (hashCode * 59) + this.HabDockingRankingPoint.GetHashCode();
            if (this.HabLineRobot1 is not null)
            {
                hashCode = (hashCode * 59) + this.HabLineRobot1.GetHashCode();
            }

            if (this.HabLineRobot2 is not null)
            {
                hashCode = (hashCode * 59) + this.HabLineRobot2.GetHashCode();
            }

            if (this.HabLineRobot3 is not null)
            {
                hashCode = (hashCode * 59) + this.HabLineRobot3.GetHashCode();
            }

            hashCode = (hashCode * 59) + this.HatchPanelPoints.GetHashCode();
            if (this.LowLeftRocketFar is not null)
            {
                hashCode = (hashCode * 59) + this.LowLeftRocketFar.GetHashCode();
            }

            if (this.LowLeftRocketNear is not null)
            {
                hashCode = (hashCode * 59) + this.LowLeftRocketNear.GetHashCode();
            }

            if (this.LowRightRocketFar is not null)
            {
                hashCode = (hashCode * 59) + this.LowRightRocketFar.GetHashCode();
            }

            if (this.LowRightRocketNear is not null)
            {
                hashCode = (hashCode * 59) + this.LowRightRocketNear.GetHashCode();
            }

            if (this.MidLeftRocketFar is not null)
            {
                hashCode = (hashCode * 59) + this.MidLeftRocketFar.GetHashCode();
            }

            if (this.MidLeftRocketNear is not null)
            {
                hashCode = (hashCode * 59) + this.MidLeftRocketNear.GetHashCode();
            }

            if (this.MidRightRocketFar is not null)
            {
                hashCode = (hashCode * 59) + this.MidRightRocketFar.GetHashCode();
            }

            if (this.MidRightRocketNear is not null)
            {
                hashCode = (hashCode * 59) + this.MidRightRocketNear.GetHashCode();
            }

            if (this.PreMatchBay1 is not null)
            {
                hashCode = (hashCode * 59) + this.PreMatchBay1.GetHashCode();
            }

            if (this.PreMatchBay2 is not null)
            {
                hashCode = (hashCode * 59) + this.PreMatchBay2.GetHashCode();
            }

            if (this.PreMatchBay3 is not null)
            {
                hashCode = (hashCode * 59) + this.PreMatchBay3.GetHashCode();
            }

            if (this.PreMatchBay6 is not null)
            {
                hashCode = (hashCode * 59) + this.PreMatchBay6.GetHashCode();
            }

            if (this.PreMatchBay7 is not null)
            {
                hashCode = (hashCode * 59) + this.PreMatchBay7.GetHashCode();
            }

            if (this.PreMatchBay8 is not null)
            {
                hashCode = (hashCode * 59) + this.PreMatchBay8.GetHashCode();
            }

            if (this.PreMatchLevelRobot1 is not null)
            {
                hashCode = (hashCode * 59) + this.PreMatchLevelRobot1.GetHashCode();
            }

            if (this.PreMatchLevelRobot2 is not null)
            {
                hashCode = (hashCode * 59) + this.PreMatchLevelRobot2.GetHashCode();
            }

            if (this.PreMatchLevelRobot3 is not null)
            {
                hashCode = (hashCode * 59) + this.PreMatchLevelRobot3.GetHashCode();
            }

            hashCode = (hashCode * 59) + this.Rp.GetHashCode();
            hashCode = (hashCode * 59) + this.SandStormBonusPoints.GetHashCode();
            hashCode = (hashCode * 59) + this.TechFoulCount.GetHashCode();
            hashCode = (hashCode * 59) + this.TeleopPoints.GetHashCode();
            if (this.TopLeftRocketFar is not null)
            {
                hashCode = (hashCode * 59) + this.TopLeftRocketFar.GetHashCode();
            }

            if (this.TopLeftRocketNear is not null)
            {
                hashCode = (hashCode * 59) + this.TopLeftRocketNear.GetHashCode();
            }

            if (this.TopRightRocketFar is not null)
            {
                hashCode = (hashCode * 59) + this.TopRightRocketFar.GetHashCode();
            }

            if (this.TopRightRocketNear is not null)
            {
                hashCode = (hashCode * 59) + this.TopRightRocketNear.GetHashCode();
            }

            hashCode = (hashCode * 59) + this.TotalPoints.GetHashCode();
            return hashCode;
        }
    }

    /// <summary>
    /// To validate all properties of the instance
    /// </summary>
    /// <param name="validationContext">Validation context</param>
    /// <returns>Validation Result</returns>
    IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) => [];
}
