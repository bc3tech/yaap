/* 
 * The Blue Alliance API v3
 *
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).    A `User-Agent` header may need to be set to prevent a 403 Unauthorized error.
 *
 * The version of the OpenAPI document: 3.8.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

namespace TBAAPI.V3Client.Model;

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text;
using System.Text.Json;
using System.Text.Json.Serialization;
/// <summary>
/// A Win-Loss-Tie record for a team, or an alliance.
/// </summary>
[DataContract]
public partial record WLTRecord : IValidatableObject
{
    /// <summary>
    /// Number of losses.
    /// </summary>
    /// <value>Number of losses.</value>
    [DataMember(Name = "losses", EmitDefaultValue = false), JsonPropertyName("losses")]
    public int Losses { get; set; }

    /// <summary>
    /// Number of wins.
    /// </summary>
    /// <value>Number of wins.</value>
    [DataMember(Name = "wins", EmitDefaultValue = false), JsonPropertyName("wins")]
    public int Wins { get; set; }

    /// <summary>
    /// Number of ties.
    /// </summary>
    /// <value>Number of ties.</value>
    [DataMember(Name = "ties", EmitDefaultValue = false), JsonPropertyName("ties")]
    public int Ties { get; set; }

    /// <summary>
    /// Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
        var sb = new StringBuilder();
        sb.Append("class WLTRecord {\n");
        sb.Append("  Losses: ").Append(this.Losses).Append('\n');
        sb.Append("  Wins: ").Append(this.Wins).Append('\n');
        sb.Append("  Ties: ").Append(this.Ties).Append('\n');
        sb.Append("}\n");
        return sb.ToString();
    }

    /// <summary>
    /// Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public virtual string ToJson() => JsonSerializer.Serialize(this, GetType());

    /// <summary>
    /// Gets the hash code
    /// </summary>
    /// <returns>Hash code</returns>
    public override int GetHashCode() => HashCode.Combine(this.Losses, this.Wins, this.Ties);

    /// <summary>
    /// To validate all properties of the instance
    /// </summary>
    /// <param name="validationContext">Validation context</param>
    /// <returns>Validation Result</returns>
    IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) => [];
}
