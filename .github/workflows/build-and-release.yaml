name: Build & Release

on:
  push:
    branches:
      - main
    paths:
      - "src/**"
      - "!**/*.md"
      - "!**/CONTRIBUTING*"
env:
  VERSION: ${{ vars.BASE_VERSION }}.${{ github.run_number }}

jobs:
  build-and-pack:
    runs-on: ubuntu-latest
    environment: release
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.x"

      - name: Build
        run: dotnet build --artifacts-path o src/Yaap.sln -c Release -p:Version=${{ env.VERSION }}

      - name: Test
        run: dotnet test --no-build --artifacts-path o src/Yaap.sln -c Release

      - name: List files
        if: vars.DEBUG == 'true'
        run: ls -R ./o

      - name: Pass nupkgs to next job
        uses: actions/upload-artifact@v4
        with:
          name: packages
          path: ./o/package/release
          retention-days: 1

  publish-to-nuget:
    runs-on: ubuntu-latest
    needs: build-and-pack
    environment: release
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: packages

      - name: Push NuGet packages
        if: vars.DEBUG == 'true'
        run: ls -R .

      - name: Push NuGet packages
        if: vars.NUGET_PUBLISH == 'true'
        run: dotnet nuget push *.* -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json --skip-duplicate

  tag-release:
    runs-on: ubuntu-latest
    needs: publish-to-nuget
    environment: release
    permissions:
      contents: write
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Formulate package version
        id: package_version
        run: |
          if [ -z "${{ vars.VERSION_SUFFIX }}" ]; then
            echo "v=${{ env.VERSION }}" >> $GITHUB_OUTPUT
          else
            echo "v=${{ env.VERSION }}-${{ vars.VERSION_SUFFIX }}" >> $GITHUB_OUTPUT
          fi

      # - name: Create version tag
      #   run: git -c user.name="GitHub Actions" -c user.email="actions@github.com" tag "v${{ steps.package_version.outputs.v }}" "${{ github.sha }}"

      # - name: Push tag
      #   if: vars.PUSH_TAGS == 'true'
      #   run: git push --tags origin

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: packages
          path: ./o

      - name: Create GH Release
        if: vars.CREATE_RELEASE == 'true' && vars.VERSION_SUFFIX == ''
        run: |
          git push --tags origin
          gh release create "v${{ steps.package_version.outputs.v }}" \
          --generate-notes \
          --target ${{ github.ref_name }} \
          --draft

      - name: Create GH Release (prerelease)
        if: vars.CREATE_RELEASE == 'true' && vars.VERSION_SUFFIX != ''
        run: |
          git push --tags origin
          gh release create "v${{ steps.package_version.outputs.v }}" \
          --generate-notes \
          --target ${{ github.ref_name }} \
          --prerelease --draft

      - name: Upload Release Asset
        if: vars.CREATE_RELEASE == 'true'
        run: |
          gh release upload "v${{ steps.package_version.outputs.v }}" \
          ./o/*.nupkg \
          --clobber
